package org.test;

import java.util.List;

import org.CXCSVSchemaNode;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

public class ExpGenTest {
	
	@Before
	public void setUp()
	{
	}
	
	@After
	public void tearDown()
	{
		
	}
	
	@Test
	public void test()
	{
		// generate random numbers of columns of csv files
		// according to the column count, generate random schema nodes
		// use the schema nodes generated to parse the csv to an xml
		// use 3rd party xml parser to parse the document
		// 	reconstruct the csv content
		// 	reconstruct the schema nodes structure
		
		/* How to define the nodes structure to be equal?
		 * 	 For nodes that have child nodes, the name of the node must be 
		 *   specified by the schema
		 *   
		 *   For nodes that don't have child nodes (defined as 
		 *   startIdx = endIdx), either the node name is equal, or the name
		 *   is equal to the name specified in the column names
		 *   or it is equal to the name generated by the parser
		 */
	}

	/**
	 * @assume no loop in the schema tree
	 */
	private boolean equal_schemaNode(CXCSVSchemaNode node1, 
			CXCSVSchemaNode node2)
	{
		if (node1 == node2)
			return true;
		List<CXCSVSchemaNode> l1 = node1.getChildren();
		
		return false;
	}
}